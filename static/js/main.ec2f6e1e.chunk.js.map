{"version":3,"sources":["store.js","containers/location-form/location-form.jsx","containers/locations-list/locations-list.jsx","containers/app/app.jsx","index.js"],"names":["sleep","ms","Promise","resolve","setTimeout","store","isLoaded","locations","envs","servers","fetchData","a","runInAction","sample","makeAutoObservable","this","storeContext","createContext","LocationForm","observer","location","locationIndex","setLocations","useContext","reduce","prevServers","server","locationID","envID","push","name","handlePropertyChange","property","event","prevLocations","newLocations","splice","target","value","className","onClick","onChange","map","storeLocation","index","storeEnv","length","join","type","hint","slice","LocationsList","useState","class","console","log","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec2f6e1e.chunk.js","sourcesContent":["import { makeAutoObservable, runInAction } from \"mobx\";\n\nimport { createContext } from \"react\";\nimport sample from \"./data.json\";\n\nfunction sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nclass Store {\n  isLoaded = false;\n  locations = [];\n  envs = [];\n  servers = [];\n\n  fetchData = async () => {\n    await sleep(3000);\n    runInAction(() => {\n      this.locations = sample.locations;\n      this.envs = sample.envs;\n      this.servers = sample.servers;\n      this.isLoaded = true;\n    });\n  };\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n}\n\nexport const store = new Store();\nexport const storeContext = createContext(store);\n","import { useContext } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nimport { storeContext } from '../../store';\r\n\r\nimport './location-form.css';\r\n\r\nconst LocationForm = observer(\r\n  function LocationForm({ location, locationIndex, setLocations }) {\r\n    const store = useContext(storeContext);\r\n\r\n    const servers = store.servers.reduce(\r\n      (prevServers, server) => {\r\n        if ( (server.locationID === location.locationID) && (server.envID === location.envID) ) prevServers.push(server.name);\r\n        \r\n        return prevServers;\r\n      }, []\r\n    );\r\n\r\n    const handlePropertyChange = property => {\r\n      return event => {\r\n        setLocations(\r\n          prevLocations => {\r\n            const newLocations = [...prevLocations];\r\n            newLocations.splice(\r\n              locationIndex, \r\n              1, \r\n              {\r\n                ...location,\r\n                ...{[property]: +event.target.value}\r\n              }\r\n            );\r\n  \r\n            return newLocations;\r\n          }\r\n        );\r\n      }\r\n    } \r\n\r\n    const handleHintChange = event => {\r\n      setLocations(\r\n        prevLocations => {\r\n          const newLocations = [...prevLocations];\r\n          newLocations.splice(\r\n            locationIndex, \r\n            1, \r\n            {\r\n              ...location,\r\n              ...{hint: event.target.value.slice(2)}\r\n            }\r\n          );\r\n\r\n          return newLocations;\r\n        }\r\n      );\r\n    }\r\n\r\n    const handleDeleteClick = event => {\r\n      setLocations(\r\n        prevLocations => {\r\n          const newLocations = [...prevLocations];\r\n          newLocations.splice(\r\n            locationIndex, \r\n            1,\r\n          );\r\n\r\n          return newLocations;\r\n        }\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className='location-form'>\r\n        <div className='location-form__header'>\r\n          <i className=\"fas fa-vial\"></i>\r\n          Тестовая локация {locationIndex + 1}\r\n        </div>\r\n        <div className='location-form__delete'>\r\n          <i \r\n            className=\"fas fa-trash-alt\"\r\n            onClick={handleDeleteClick}\r\n          ></i>\r\n        </div>\r\n        <div className='location-form__location-label'>\r\n          Локация\r\n        </div>\r\n        {store.isLoaded ?\r\n          (\r\n            <select\r\n              className='location-form__location-input input-with-icon'\r\n              onChange={handlePropertyChange('locationID')}\r\n              value={location.locationID}\r\n            >\r\n              <option value=''>-- Выберите локацию --</option>\r\n              {store.locations.map(\r\n                (storeLocation, index) => (\r\n                  <option\r\n                    value={storeLocation.locationID}\r\n                    key={index}\r\n                  >&#xf3c5; {storeLocation.name}</option>\r\n                )\r\n              )}\r\n            </select>\r\n          )\r\n        :\r\n          (\r\n            <div\r\n              className='location-form__location-input loading-background'\r\n            />\r\n          )\r\n        }\r\n        <div className='location-form__env-label'>\r\n          Среда\r\n        </div>\r\n        {store.isLoaded ?\r\n          (\r\n            <select\r\n              className='location-form__env-input input-with-icon'\r\n              onChange={handlePropertyChange('envID')}\r\n              value={location.envID}\r\n            >\r\n              <option value=''>-- Выберите среду --</option>\r\n              {store.envs.map(\r\n                (storeEnv, index) => (\r\n                  <option\r\n                    value={storeEnv.envID}\r\n                    key={index}\r\n                  >&#xf299; {storeEnv.name}</option>\r\n                )\r\n              )}\r\n            </select>\r\n          )\r\n        :\r\n          (\r\n            <div\r\n              className='location-form__env-input loading-background'\r\n            />\r\n          )\r\n        }\r\n        <div className='location-form__servers-label'>\r\n          Серверы\r\n        </div>\r\n        {store.isLoaded ?\r\n          (\r\n            <div className='location-form__servers-data input-with-icon'>\r\n              {servers.length ?\r\n                (\r\n                  <>\r\n                    &#xf233; {servers.join(', ')}\r\n                  </>\r\n                )\r\n              :\r\n                (\r\n                  <>\r\n                    &#xf057; No servers\r\n                  </>\r\n                )\r\n              }\r\n            </div>\r\n          )\r\n        :\r\n          (\r\n            <div\r\n              className='location-form__servers-data loading-background'\r\n            />\r\n          )\r\n        }\r\n        <div className='location-form__hint-label'>\r\n          Подсказка\r\n        </div>\r\n        {store.isLoaded ?\r\n          (\r\n            <input \r\n              type='text' \r\n              className='location-form__hint-input input-with-icon' \r\n              value={`\\uf128 ${location.hint}`}\r\n              onChange={handleHintChange}\r\n            />\r\n          )\r\n        :\r\n          (\r\n            <div\r\n              className='location-form__hint-input loading-background'\r\n            />\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default LocationForm","import { useState } from 'react';\r\n\r\nimport LocationForm from '../location-form';\r\n\r\nimport './locations-list.css';\r\n\r\nexport default function LocationsList() {\r\n  const [ locations, setLocations ] = useState([]);\r\n\r\n  return (\r\n    <div className='locations-list'>\r\n      {locations.map(\r\n        (location, index) => (\r\n          <LocationForm\r\n            location={location}\r\n            locationIndex={index}\r\n            setLocations={setLocations}\r\n            key={index}\r\n          />\r\n        )\r\n      )}\r\n      <button\r\n        className='locations-list__button'\r\n        onClick={\r\n          () => setLocations(\r\n            prevLocations => [\r\n              ...prevLocations, \r\n              { locationID: 0, envID: 0, hint: '' }\r\n            ]\r\n          )\r\n        }\r\n      >\r\n        <i class=\"fas fa-plus\"></i>\r\n        Добавить тестовую локацию...\r\n      </button>\r\n      <button\r\n        className='locations-list__button'\r\n        onClick={\r\n          () => console.log(locations)\r\n        }\r\n      >\r\n        <i class=\"fas fa-terminal\"></i>\r\n        Вывести в консоль...\r\n      </button>\r\n    </div>\r\n  )\r\n}","import React, { useContext, useState } from \"react\";\nimport { observer } from \"mobx-react-lite\";\n\nimport { storeContext } from \"../../store\";\n\n// import LocationForm from '../location-form';\nimport LocationsList from '../locations-list';\n\nimport './app.css';\n\nexport default function App() {\n  return (\n    <div className='app'>\n      <LocationsList/>\n    </div>\n  );\n}\n\nconst TestLocationForm = observer(function TestLocationForm() {\n  const store = useContext(storeContext);\n  if (!store.isLoaded) {\n    return <div>Данные не загружены</div>;\n  }\n  return <div>Hello world</div>;\n});\n\nconst TestLocationsList = () => {\n  const [locationsList, setLocationsList] = useState([{}]);\n  return (\n    <>\n      {locationsList.map((location, index) => (\n        <TestLocationForm key={`location-${index}`} />\n      ))}\n      <button\n        onClick={() => {\n          setLocationsList([...locationsList, {}]);\n        }}\n      >\n        Добавить тестовую локацию\n      </button>\n      <button\n        onClick={() => {\n          console.log(locationsList);\n        }}\n      >\n        Вывести результат в консоль\n      </button>\n    </>\n  );\n};\n","import \"./main.css\";\n\nimport App from \"./containers/app\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { store } from './store';\n\nstore.fetchData();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}